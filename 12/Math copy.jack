// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    /** Initializes the library. */
    function void init() {
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        var int res;
        let res = x;
        if (x < 0) {
            let res = -x;
        }
        return res;
    }

    /** Returns the product of x and y.
     *  When a Jack compiler detects the multiplication operator '*' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int res, i;
        var int currentYBit, shiftedX;

        let res = 0;
        let i = 0;

        let currentYBit = 1;
        let shiftedX = x;

        while (~(y = 0)) {
            if (~(y & currentYBit = 0)) {
                res = res + shiftedX;
                y = y - currentYBit;
            }
            shiftedX = shiftedX + shiftedX;
        }

        return res;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int res;
        let res = 0;
        if (y > x) {
            res = 0;
        }
        else {
            let q = divide(x, y + y);
            if (x - (q + q) * y < y) {
                let res = q + 1;
            }
            {
                let res = q + q + 1;
            }
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        return x;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        var int res;
        let res = a;
        if (a < b) {
            let res = b;
        }
        return res;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        var int res;
        let res = a;
        if (a > b) {
            let res = b;
        }
        return res;
    }
}
